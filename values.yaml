# Default values for hope-core.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

ingress:
  enabled: false
  className: ""
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
  - host: chart-example.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

backend:
  job:
    postInstall:
      # TODO: wait for fix for upgrade command in empty db
      # command: python3 manage.py upgrade
      command: python3 manage.py migratealldb

  secret:
    SECRET_KEY: change-me

  config:
    DJANGO_ALLOWED_HOSTS: "kubernetes.internal"

  replicaCount: 1

  image:
    repository: unicef/hope
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  imagePullSecrets: []

  podAnnotations: {}
  podLabels: {}

  podSecurityContext: {}
  # fsGroup: 2000

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  service:
    type: ClusterIP
    port: 8000

  securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

  livenessProbe:
    timeoutSeconds: 30
    httpGet:
      path: /api/_health
      port: 8000
      httpHeaders:
      - name: X-Health
        value: "Kubernetes-Health"
      - name: Host
        value: "kubernetes.internal"

  readinessProbe:
    timeoutSeconds: 30
    httpGet:
      path: /api/_health
      port: 8000
      httpHeaders:
      - name: X-Health
        value: "Kubernetes-Health"
      - name: Host
        value: "kubernetes.internal"


  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}


postgresql:
  enabled: true
  auth:
    username: hopeuser
    password: change-me-please
    enablePostgresUser: true
    postgresPassword: really-change-me
  primary:
    initdb:
      user: postgres
      password: really-change-me
      scripts:
        init.sql: |
          CREATE DATABASE hopedb;
          GRANT ALL PRIVILEGES ON DATABASE hopedb TO hopeuser;
          \c hopedb;
          CREATE EXTENSION IF NOT EXISTS postgis;
          GRANT ALL ON SCHEMA public TO hopeuser;
          ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO hopeuser;

          CREATE DATABASE cash_assist_datahub_mis;
          GRANT ALL PRIVILEGES ON DATABASE cash_assist_datahub_mis TO hopeuser;
          \c cash_assist_datahub_mis;
          CREATE EXTENSION IF NOT EXISTS postgis;
          GRANT ALL ON SCHEMA public TO hopeuser;
          ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO hopeuser;

          CREATE DATABASE cash_assist_datahub_ca;
          GRANT ALL PRIVILEGES ON DATABASE cash_assist_datahub_ca TO hopeuser;
          \c cash_assist_datahub_ca;
          CREATE EXTENSION IF NOT EXISTS postgis;
          GRANT ALL ON SCHEMA public TO hopeuser;
          ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO hopeuser;

          CREATE DATABASE cash_assist_datahub_erp;
          GRANT ALL PRIVILEGES ON DATABASE cash_assist_datahub_erp TO hopeuser;
          \c cash_assist_datahub_erp;
          CREATE EXTENSION IF NOT EXISTS postgis;
          GRANT ALL ON SCHEMA public TO hopeuser;
          ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO hopeuser;

          CREATE DATABASE registration_datahub;
          GRANT ALL PRIVILEGES ON DATABASE registration_datahub TO hopeuser;
          \c registration_datahub;
          CREATE EXTENSION IF NOT EXISTS postgis;
          GRANT ALL ON SCHEMA public TO hopeuser;
          ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO hopeuser;
